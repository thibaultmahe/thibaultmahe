{
  "active": false,
  "connections": {
    "Filter": {
      "main": [
        [
          {
            "node": "Prepare output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check operation": {
      "main": [
        [
          {
            "node": "Get column names",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare column data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get column names": {
      "main": [
        [
          {
            "node": "Prepare output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get customer tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List columns tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Prepare column data": {
      "main": [
        [
          {
            "node": "Prepare output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Google Sheet URL": {
      "main": [
        [
          {
            "node": "Get Google sheet contents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get column values tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Set Google Sheet URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Google sheet contents": {
      "main": [
        [
          {
            "node": "Check operation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-05T14:25:29.023Z",
  "id": "JCbvUQ8vIMlbQzWD",
  "meta": {
    "templateId": "2085",
    "templateCredsSetupCompleted": true
  },
  "name": "Chat with a Google Sheet using AI",
  "nodes": [
    {
      "parameters": {},
      "id": "89af21df-1125-4df6-9d43-a643e02bb53f",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        460,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Sub-workflow: Custom tool\nThis can be called by the agent above. It returns three different types of data from the Google Sheet, which can be used together for more complex queries without returning the whole sheet (which might be too big for GPT to handle)",
        "height": 612.0936015224503,
        "width": 1449.2963504228514,
        "color": 7
      },
      "id": "f571d0cc-eb43-46c9-bdd5-45abc51dfbe7",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Main workflow: AI agent using custom tool",
        "height": 486.5625,
        "width": 927.5,
        "color": 7
      },
      "id": "8761e314-c1f2-4edd-88ea-bfeb02dc8f1a",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        380,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Try me out\n\nClick the 'Chat' button at the bottom and enter:\n\n_Which is our biggest customer?_",
        "height": 183.85014518022527,
        "width": 185.9375
      },
      "id": "e793b816-68d9-42ef-b9b0-6fe22aa375e8",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        220,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "url",
          "value": "={{ $json.sheetUrl }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "url",
          "value": "={{ $json.sheetUrl }}"
        },
        "options": {}
      },
      "id": "f895d926-0f70-415b-9492-c3ecf186e761",
      "name": "Get Google sheet contents",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        900,
        1020
      ],
      "typeVersion": 4.2,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2WEM9Jn81BmJbW4o",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "sheetUrl",
              "stringValue": "https://docs.google.com/spreadsheets/d/1YEUxA8-V4JXwZoabC3_wx9lqeMejPwVypAQ5AX7amnU/edit?gid=1856813822#gid=1856813822"
            }
          ]
        },
        "options": {}
      },
      "id": "daca1624-6c35-473a-bf3a-5fa0686a0a62",
      "name": "Set Google Sheet URL",
      "type": "n8n-nodes-base.set",
      "position": [
        680,
        1020
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "response",
              "stringValue": "={{ Object.keys($json) }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "68edca41-0196-47d8-9378-31fed0a70918",
      "name": "Get column names",
      "type": "n8n-nodes-base.set",
      "position": [
        1380,
        840
      ],
      "executeOnce": true,
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "jsCode": "return {\n  'response': JSON.stringify($input.all().map(x => x.json))\n}"
      },
      "id": "7a9dea08-f9e9-4139-842a-9066a9cf04ea",
      "name": "Prepare output",
      "type": "n8n-nodes-base.code",
      "position": [
        1640,
        1020
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "name": "list_columns",
        "description": "=List all column names in customer data\n\nCall this tool to find out what data is available for each customer. It should be called first at the beginning to understand which columns are available for querying.",
        "workflowId": "={{ $workflow.id }}",
        "fields": {
          "values": [
            {
              "name": "operation",
              "stringValue": "column_names"
            }
          ]
        }
      },
      "id": "616eebc5-5c5c-4fa1-b13f-61a477742c72",
      "name": "List columns tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        860,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "get_customer",
        "description": "=Get all columns for a given customer\n\nThe input should be a stringified row number of the customer to fetch; only single string inputs are allowed. Returns a JSON object with all the column names and their values.",
        "workflowId": "={{ $workflow.id }}",
        "fields": {
          "values": [
            {
              "name": "operation",
              "stringValue": "row"
            }
          ]
        }
      },
      "id": "891ad3a8-72f0-45ad-8777-1647a7342c00",
      "name": "Get customer tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        1140,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "column_values",
        "description": "=Get the specified column value for all customers\n\nUse this tool to find out which customers have a certain value for a given column. Returns an array of JSON objects, one per customer. Each JSON object includes the column being requested plus the row_number column. Input should be a single string representing the name of the column to fetch.\n",
        "workflowId": "={{ $workflow.id }}",
        "fields": {
          "values": [
            {
              "name": "operation",
              "stringValue": "column_values"
            }
          ]
        }
      },
      "id": "0f3ca6ff-fc01-4f33-b1a7-cb82a0ec5c88",
      "name": "Get column values tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        1000,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "These tools all call the sub-workflow below",
        "height": 179.21380662202682,
        "width": 432.3271051132649,
        "color": 7
      },
      "id": "deef6eb4-2a11-4490-ad56-bc1ea9077843",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        900,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Change the URL of the Google Sheet here",
        "height": 226.64416053838073,
        "width": 179.99762227826224
      },
      "id": "94e4dbe5-dc41-4879-bffc-ec8f5341f3b5",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        660,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "={{ $('Execute Workflow Trigger').item.json.query }}",
              "stringValue": "={{ $json[$('Execute Workflow Trigger').item.json.query] }}"
            },
            {
              "name": "row_number",
              "stringValue": "={{ $json.row_number }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "dbb887f0-93a7-466e-9c9f-8aa4e7da935d",
      "name": "Prepare column data",
      "type": "n8n-nodes-base.set",
      "position": [
        1380,
        1020
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "bf712098-97e4-42cb-8e08-2ee32d19d3e7",
              "operator": {
                "type": "number",
                "operation": "equals"
              },
              "leftValue": "={{ $json.row_number }}",
              "rightValue": "={{ $('Execute Workflow Trigger').item.json.query }}"
            }
          ]
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "041d32ca-e59a-4b67-a3e6-4e2f19e3de72",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "position": [
        1380,
        1180
      ],
      "typeVersion": 2,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.operation }}",
                    "rightValue": "column_names"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "col names"
            },
            {
              "conditions": {
                "options": {
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "b7968ce7-0d20-43d0-bcca-7b66e0aec715",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.operation }}",
                    "rightValue": "column_values"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "col values"
            },
            {
              "conditions": {
                "options": {
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "de3bb9b5-edc6-4448-839e-eda07b72144a",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Execute Workflow Trigger').item.json.operation }}",
                    "rightValue": "row"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "rows"
            }
          ]
        },
        "options": {}
      },
      "id": "69b9e70a-9104-4731-9f16-8324a3f7e423",
      "name": "Check operation",
      "type": "n8n-nodes-base.switch",
      "position": [
        1120,
        1020
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo-0125",
        "options": {
          "temperature": 0
        }
      },
      "id": "d955e499-5a3e-45a3-9fc8-266e2f687ecc",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        720,
        560
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "Uqrn8W5opyj5BI6A",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {},
      "id": "28fbda0b-1e01-4f59-af5b-fe02eba899b1",
      "name": "Chat Trigger",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        540,
        340
      ],
      "webhookId": "2b9d9c42-adf4-425d-b0a5-e4f60c750e63",
      "typeVersion": 1
    },
    {
      "parameters": {
        "agent": "reActAgent",
        "options": {
          "suffix": "Begin! Use `list_columns` tool first to determine which columns are available.\n\n\tQuestion: {input}\n\tThought:{agent_scratchpad}",
          "returnIntermediateSteps": false
        }
      },
      "id": "c89614f4-d8b1-4f7b-9e7c-856e3f89eadb",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        820,
        340
      ],
      "typeVersion": 1.3
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-05T14:25:29.023Z",
  "versionId": "d49013df-d7c0-4c3e-87e5-d990eb186b99"
}